###################################################################################################################################
# Registry for RegistryPointers_Case08 in the FAST Modularization Framework
# 
# This test case shows the unsuccessful specification of multi-dimensional pointer arrays within the 
#   Framework data structures: OutputType
#   NOTE: If the -ccode option is used with the Registry, then this case will successfully generate a 
#         Fortran types file and the associate c header file
#
# Entries are of the form
# <keyword> <ModuleName/ModName> <TypeName>  <FieldType> <FieldName> <Dims>   <IO>  <DNAME>  <DESCRIP>   <UNITS>
#
# Use ^ as a shortcut for the value in the same column from the previous line.
###################################################################################################################################

# ...... Include files (definitions from NWTC Library) ............................................................................
# make sure that the file name does not have any trailing white spaces!
include  Registry_NWTC_Library.txt

# ..... Initialization data .......................................................................................................
# Define inputs that the initialization routine may need here:
#   e.g.,  the name of the input file,  the file root name,etc.
#
typedef     RegistryPointers_Case08/RegistryPointers_Case08   InitInputType     CHARACTER(1024)      InputFile                 -        -        "Name of the input file"   -

# Define outputs from the initialization routine here:
#
typedef     ^                 InitOutputType    SiKi                 twoDArray       {:}{:}    -        -        "Fortran 2D array"   -

# ..... States ....................................................................................................................
# Define continuous (differentiable) states here:
typedef     ^              ContinuousStateType  SiKi                 DummyContState    -        -        -        "Remove this variable if you have continuous states"  -


# Define discrete (nondifferentiable) states here:
typedef     ^              DiscreteStateType    SiKi                 DummyDiscState    -        -        -        "Remove this variable if you have discrete states" -

# Define constraint states here:
typedef     ^              ConstraintStateType  SiKi                 DummyConstrState  -        -        -        "Remove this variable if you have constraint states"  -

# Define any other states, including integer or logical states here:
typedef     ^              OtherStateType       INTEGER              DummyOtherState   -        -        -        "Remove this variable if you have other states" -

# ..... Misc/Optimization variables.................................................................................................
# Define any data that are used only for efficiency purposes (these variables are not associated with time):
#   e.g. indices for searching in an array, large arrays that are local variables in any routine called multiple times, etc.
typedef     ^              MiscVarType         INTEGER              DummyMiscVar     -        -        -        "Remove this variable if you have misc/optimization variables" -

# ..... Parameters ................................................................................................................
# Define parameters here:
# Time step for integration of continuous states (if a fixed-step integrator is used) and update of discrete states:
typedef     ^                 ParameterType     DbKi                 DT                -        -        -        "Time step for continuous state integration & discrete state update" seconds

# ..... Inputs ....................................................................................................................
# Define inputs that are contained on the mesh here:

# Define inputs that are not on this mesh here:
typedef     ^                 InputType         SiKi                 DummyInput        -        -        -        "Remove this variable if you have input data"   -

# ..... Outputs ...................................................................................................................
# Define outputs that are not on this mesh here:
typedef     ^                 OutputType        SiKi                 DummyOutput       -        -        -        "Remove this variable if you have output data"  -
typedef     ^                 ^                 SiKi                 p3DArray        {*}{*}{*} -        -        "Fortran 3D Array pointer" -
